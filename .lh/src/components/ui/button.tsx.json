{
    "sourceFile": "src/components/ui/button.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 20,
            "patches": [
                {
                    "date": 1733666070362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733666075623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,56 @@\n+import * as React from \"react\"\n+import { Slot } from \"@radix-ui/react-slot\"\n+import { cva, type VariantProps } from \"class-variance-authority\"\n+\n+import { cn } from \"@/lib/utils\"\n+\n+const buttonVariants = cva(\n+  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-pink-400 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n+  {\n+    variants: {\n+      variant: {\n+        default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n+        destructive:\n+          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n+        outline:\n+          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+        secondary:\n+          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n+        ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+        link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n+      },\n+      size: {\n+        default: \"h-10 px-4 py-2\",\n+        sm: \"h-9 rounded-md px-3\",\n+        lg: \"h-11 rounded-md px-8\",\n+        icon: \"h-10 w-10\",\n+      },\n+    },\n+    defaultVariants: {\n+      variant: \"default\",\n+      size: \"default\",\n+    },\n+  }\n+)\n+\n+export interface ButtonProps\n+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n+    VariantProps<typeof buttonVariants> {\n+  asChild?: boolean\n+}\n+\n+const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n+  ({ className, variant, size, asChild = false, ...props }, ref) => {\n+    const Comp = asChild ? Slot : \"button\"\n+    return (\n+      <Comp\n+        className={cn(buttonVariants({ variant, size, className }))}\n+        ref={ref}\n+        {...props}\n+      />\n+    )\n+  }\n+)\n+Button.displayName = \"Button\"\n+\n+export { Button, buttonVariants }\n"
                },
                {
                    "date": 1733666087843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,56 @@\n+import * as React from \"react\"\n+import { Slot } from \"@radix-ui/react-slot\"\n+import { cva, type VariantProps } from \"class-variance-authority\"\n+\n+import { cn } from \"@/lib/utils\"\n+\n+const buttonVariants = cva(\n+  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-pink-400 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-pink-500 dark:focus-visible:ring-gray-300\",\n+  {\n+    variants: {\n+      variant: {\n+        default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n+        destructive:\n+          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n+        outline:\n+          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+        secondary:\n+          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n+        ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+        link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n+      },\n+      size: {\n+        default: \"h-10 px-4 py-2\",\n+        sm: \"h-9 rounded-md px-3\",\n+        lg: \"h-11 rounded-md px-8\",\n+        icon: \"h-10 w-10\",\n+      },\n+    },\n+    defaultVariants: {\n+      variant: \"default\",\n+      size: \"default\",\n+    },\n+  }\n+)\n+\n+export interface ButtonProps\n+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n+    VariantProps<typeof buttonVariants> {\n+  asChild?: boolean\n+}\n+\n+const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n+  ({ className, variant, size, asChild = false, ...props }, ref) => {\n+    const Comp = asChild ? Slot : \"button\"\n+    return (\n+      <Comp\n+        className={cn(buttonVariants({ variant, size, className }))}\n+        ref={ref}\n+        {...props}\n+      />\n+    )\n+  }\n+)\n+Button.displayName = \"Button\"\n+\n+export { Button, buttonVariants }\n"
                },
                {
                    "date": 1733666093815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,56 @@\n+import * as React from \"react\"\n+import { Slot } from \"@radix-ui/react-slot\"\n+import { cva, type VariantProps } from \"class-variance-authority\"\n+\n+import { cn } from \"@/lib/utils\"\n+\n+const buttonVariants = cva(\n+  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-pink-400 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-pink-500 dark:focus-visible:ring-pink-300\",\n+  {\n+    variants: {\n+      variant: {\n+        default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n+        destructive:\n+          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n+        outline:\n+          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+        secondary:\n+          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n+        ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+        link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n+      },\n+      size: {\n+        default: \"h-10 px-4 py-2\",\n+        sm: \"h-9 rounded-md px-3\",\n+        lg: \"h-11 rounded-md px-8\",\n+        icon: \"h-10 w-10\",\n+      },\n+    },\n+    defaultVariants: {\n+      variant: \"default\",\n+      size: \"default\",\n+    },\n+  }\n+)\n+\n+export interface ButtonProps\n+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n+    VariantProps<typeof buttonVariants> {\n+  asChild?: boolean\n+}\n+\n+const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n+  ({ className, variant, size, asChild = false, ...props }, ref) => {\n+    const Comp = asChild ? Slot : \"button\"\n+    return (\n+      <Comp\n+        className={cn(buttonVariants({ variant, size, className }))}\n+        ref={ref}\n+        {...props}\n+      />\n+    )\n+  }\n+)\n+Button.displayName = \"Button\"\n+\n+export { Button, buttonVariants }\n"
                },
                {
                    "date": 1733666178911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,172 +53,8 @@\n )\n Button.displayName = \"Button\"\n \n export { Button, buttonVariants }\n-import * as React from \"react\"\n-import { Slot } from \"@radix-ui/react-slot\"\n-import { cva, type VariantProps } from \"class-variance-authority\"\n \n-import { cn } from \"@/lib/utils\"\n \n-const buttonVariants = cva(\n-  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-pink-400 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-pink-500 dark:focus-visible:ring-gray-300\",\n-  {\n-    variants: {\n-      variant: {\n-        default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n-        destructive:\n-          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n-        outline:\n-          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-        secondary:\n-          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n-        ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-        link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n-      },\n-      size: {\n-        default: \"h-10 px-4 py-2\",\n-        sm: \"h-9 rounded-md px-3\",\n-        lg: \"h-11 rounded-md px-8\",\n-        icon: \"h-10 w-10\",\n-      },\n-    },\n-    defaultVariants: {\n-      variant: \"default\",\n-      size: \"default\",\n-    },\n-  }\n-)\n \n-export interface ButtonProps\n-  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n-    VariantProps<typeof buttonVariants> {\n-  asChild?: boolean\n-}\n \n-const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n-  ({ className, variant, size, asChild = false, ...props }, ref) => {\n-    const Comp = asChild ? Slot : \"button\"\n-    return (\n-      <Comp\n-        className={cn(buttonVariants({ variant, size, className }))}\n-        ref={ref}\n-        {...props}\n-      />\n-    )\n-  }\n-)\n-Button.displayName = \"Button\"\n-\n-export { Button, buttonVariants }\n-import * as React from \"react\"\n-import { Slot } from \"@radix-ui/react-slot\"\n-import { cva, type VariantProps } from \"class-variance-authority\"\n-\n-import { cn } from \"@/lib/utils\"\n-\n-const buttonVariants = cva(\n-  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-pink-400 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n-  {\n-    variants: {\n-      variant: {\n-        default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n-        destructive:\n-          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n-        outline:\n-          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-        secondary:\n-          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n-        ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-        link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n-      },\n-      size: {\n-        default: \"h-10 px-4 py-2\",\n-        sm: \"h-9 rounded-md px-3\",\n-        lg: \"h-11 rounded-md px-8\",\n-        icon: \"h-10 w-10\",\n-      },\n-    },\n-    defaultVariants: {\n-      variant: \"default\",\n-      size: \"default\",\n-    },\n-  }\n-)\n-\n-export interface ButtonProps\n-  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n-    VariantProps<typeof buttonVariants> {\n-  asChild?: boolean\n-}\n-\n-const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n-  ({ className, variant, size, asChild = false, ...props }, ref) => {\n-    const Comp = asChild ? Slot : \"button\"\n-    return (\n-      <Comp\n-        className={cn(buttonVariants({ variant, size, className }))}\n-        ref={ref}\n-        {...props}\n-      />\n-    )\n-  }\n-)\n-Button.displayName = \"Button\"\n-\n-export { Button, buttonVariants }\n-import * as React from \"react\"\n-import { Slot } from \"@radix-ui/react-slot\"\n-import { cva, type VariantProps } from \"class-variance-authority\"\n-\n-import { cn } from \"@/lib/utils\"\n-\n-const buttonVariants = cva(\n-  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring- focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n-  {\n-    variants: {\n-      variant: {\n-        default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n-        destructive:\n-          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n-        outline:\n-          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-        secondary:\n-          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n-        ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-        link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n-      },\n-      size: {\n-        default: \"h-10 px-4 py-2\",\n-        sm: \"h-9 rounded-md px-3\",\n-        lg: \"h-11 rounded-md px-8\",\n-        icon: \"h-10 w-10\",\n-      },\n-    },\n-    defaultVariants: {\n-      variant: \"default\",\n-      size: \"default\",\n-    },\n-  }\n-)\n-\n-export interface ButtonProps\n-  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n-    VariantProps<typeof buttonVariants> {\n-  asChild?: boolean\n-}\n-\n-const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n-  ({ className, variant, size, asChild = false, ...props }, ref) => {\n-    const Comp = asChild ? Slot : \"button\"\n-    return (\n-      <Comp\n-        className={cn(buttonVariants({ variant, size, className }))}\n-        ref={ref}\n-        {...props}\n-      />\n-    )\n-  }\n-)\n-Button.displayName = \"Button\"\n-\n-export { Button, buttonVariants }\n"
                },
                {
                    "date": 1733666186449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,54 @@\n+\n+\n+\n+\n+\n+import * as React from \"react\"\n+import { Slot } from \"@radix-ui/react-slot\"\n+import { cva, type VariantProps } from \"class-variance-authority\"\n+import { cn } from \"@/lib/utils\"\n+\n+const buttonVariants = cva(\n+  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n+  {\n+    variants: {\n+      variant: {\n+        default:\n+          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n+        destructive:\n+          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n+        outline:\n+          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n+        secondary:\n+          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n+        ghost:\n+          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+        link:\n+          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n+      },\n+      size: {\n+        default: \"h-10 px-4 py-2\",\n+        sm: \"h-9 rounded-md px-3\",\n+        lg: \"h-11 rounded-md px-8\",\n+        icon: \"h-10 w-10\",\n+      },\n+    },\n+    defaultVariants: {\n+      variant: \"default\",\n+      size: \"default\",\n+    },\n+  }\n+)\n+\n+export interface ButtonProps\n+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n+    VariantProps<typeof buttonVariants> {\n+  asChild?: boolean\n+}\n+\n+const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n+  ({ className, variant, size, asChild = false, ...props }, ref) => {\n+    const Comp = asChild ? Slot : \"button\"\n+    return (\n+      <Comp\n+       \n"
                },
                {
                    "date": 1733666195019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+import * as React from \"react\"\n+import { Slot } from \"@radix-ui/react-slot\"\n+import { cva, type VariantProps } from \"class-variance-authority\"\n+import { cn } from \"@/lib/utils\"\n+\n+const buttonVariants = cva(\n+  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n+  {\n+    variants: {\n+      variant: {\n+        default:\n+          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n+        destructive:\n+          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n+        outline:\n+          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n+        secondary:\n+          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n+        ghost:\n+          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+        link:\n+          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n+      },\n+      size: {\n+        default: \"h-10 px-4 py-2\",\n+        sm: \"h-9 rounded-md px-3\",\n+        lg: \"h-11 rounded-md px-8\",\n+        icon: \"h-10 w-10\",\n+      },\n+    },\n+    defaultVariants: {\n+      variant: \"default\",\n+      size: \"default\",\n+    },\n+  }\n+)\n+\n+export interface ButtonProps\n+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n+    VariantProps<typeof buttonVariants> {\n+  asChild?: boolean\n+}\n+\n+const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n+  ({ className, variant, size, asChild = false, ...props }, ref) => {\n+    const Comp = asChild ? Slot : \"button\"\n+    return (\n+      <Comp\n+       \n+      import * as React from \"react\"\n+      import { Slot } from \"@radix-ui/react-slot\"\n+      import { cva, type VariantProps } from \"class-variance-authority\"\n+      \n+      import { cn } from \"@/lib/utils\"\n+      \n+      const buttonVariants = cva(\n+        \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-pink-400 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-pink-500 dark:focus-visible:ring-pink-300\",\n+        {\n+          variants: {\n+            variant: {\n+              default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n+              destructive:\n+                \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n+              outline:\n+                \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+              secondary:\n+                \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n+              ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+              link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n+            },\n+            size: {\n+              default: \"h-10 px-4 py-2\",\n+              sm: \"h-9 rounded-md px-3\",\n+              lg: \"h-11 rounded-md px-8\",\n+              icon: \"h-10 w-10\",\n+            },\n+          },\n+          defaultVariants: {\n+            variant: \"default\",\n+            size: \"default\",\n+          },\n+        }\n+      )\n+      \n+      export interface ButtonProps\n+        extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n+          VariantProps<typeof buttonVariants> {\n+        asChild?: boolean\n+      }\n+      \n+      const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n+        ({ className, variant, size, asChild = false, ...props }, ref) => {\n+          const Comp = asChild ? Slot : \"button\"\n+          return (\n+            <Comp\n+              className={cn(buttonVariants({ variant, size, className }))}\n+              ref={ref}\n+              {...props}\n+            />\n+          )\n+        }\n+      )\n+      Button.displayName = \"Button\"\n+      \n+      export { Button, buttonVariants }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733666200647,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+import * as React from \"react\"\n+import { Slot } from \"@radix-ui/react-slot\"\n+import { cva, type VariantProps } from \"class-variance-authority\"\n+import { cn } from \"@/lib/utils\"\n+\n+const buttonVariants = cva(\n+  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n+  {\n+    variants: {\n+      variant: {\n+        default:\n+          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n+        destructive:\n+          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n+        outline:\n+          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n+        secondary:\n+          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n+        ghost:\n+          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+        link:\n+          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n+      },\n+      size: {\n+        default: \"h-10 px-4 py-2\",\n+        sm: \"h-9 rounded-md px-3\",\n+        lg: \"h-11 rounded-md px-8\",\n+        icon: \"h-10 w-10\",\n+      },\n+    },\n+    defaultVariants: {\n+      variant: \"default\",\n+      size: \"default\",\n+    },\n+  }\n+)\n+\n+export interface ButtonProps\n+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n+    VariantProps<typeof buttonVariants> {\n+  asChild?: boolean\n+}\n+\n+const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n+  ({ className, variant, size, asChild = false, ...props }, ref) => {\n+    const Comp = asChild ? Slot : \"button\"\n+    return (\n+      <Comp\n+       \n+      import * as React from \"react\"\n+      import { Slot } from \"@radix-ui/react-slot\"\n+      import { cva, type VariantProps } from \"class-variance-authority\"\n+      \n+      import { cn } from \"@/lib/utils\"\n+      \n+      const buttonVariants = cva(\n+        \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-pink-400 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-pink-500 dark:focus-visible:ring-pink-300\",\n+        {\n+          variants: {\n+            variant: {\n+              default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n+              destructive:\n+                \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n+              outline:\n+                \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+              secondary:\n+                \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n+              ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+              link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n+            },\n+            size: {\n+              default: \"h-10 px-4 py-2\",\n+              sm: \"h-9 rounded-md px-3\",\n+              lg: \"h-11 rounded-md px-8\",\n+              icon: \"h-10 w-10\",\n+            },\n+          },\n+          defaultVariants: {\n+            variant: \"default\",\n+            size: \"default\",\n+          },\n+        }\n+      )\n+      \n+      export interface ButtonProps\n+        extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n+          VariantProps<typeof buttonVariants> {\n+        asChild?: boolean\n+      }\n+      \n+      const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n+        ({ className, variant, size, asChild = false, ...props }, ref) => {\n+          const Comp = asChild ? Slot : \"button\"\n+          return (\n+            <Comp\n+              className={cn(buttonVariants({ variant, size, className }))}\n+              ref={ref}\n+              {...props}\n+            />\n+          )\n+        }\n+      )\n+Button.displayName = \"Button\"\n+      \n+export { Button, buttonVariants }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733666207675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+import * as React from \"react\"\n+import { Slot } from \"@radix-ui/react-slot\"\n+import { cva, type VariantProps } from \"class-variance-authority\"\n+import { cn } from \"@/lib/utils\"\n+\n+const buttonVariants = cva(\n+  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n+  {\n+    variants: {\n+      variant: {\n+        default:\n+          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n+        destructive:\n+          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n+        outline:\n+          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n+        secondary:\n+          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n+        ghost:\n+          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+        link:\n+          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n+      },\n+      size: {\n+        default: \"h-10 px-4 py-2\",\n+        sm: \"h-9 rounded-md px-3\",\n+        lg: \"h-11 rounded-md px-8\",\n+        icon: \"h-10 w-10\",\n+      },\n+    },\n+    defaultVariants: {\n+      variant: \"default\",\n+      size: \"default\",\n+    },\n+  }\n+)\n+\n+export interface ButtonProps\n+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n+    VariantProps<typeof buttonVariants> {\n+  asChild?: boolean\n+}\n+\n+const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n+  ({ className, variant, size, asChild = false, ...props }, ref) => {\n+    const Comp = asChild ? Slot : \"button\"\n+    return (\n+      <Comp\n+       \n+      import * as React from \"react\"\n+      import { Slot } from \"@radix-ui/react-slot\"\n+      import { cva, type VariantProps } from \"class-variance-authority\"\n+      \n+      import { cn } from \"@/lib/utils\"\n+      \n+      const buttonVariants = cva(\n+        \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-pink-400 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-pink-500 dark:focus-visible:ring-pink-300\",\n+        {\n+          variants: {\n+            variant: {\n+              default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n+              destructive:\n+                \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n+              outline:\n+                \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+              secondary:\n+                \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n+              ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+              link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n+            },\n+            size: {\n+              default: \"h-10 px-4 py-2\",\n+              sm: \"h-9 rounded-md px-3\",\n+              lg: \"h-11 rounded-md px-8\",\n+              icon: \"h-10 w-10\",\n+            },\n+          },\n+          defaultVariants: {\n+            variant: \"default\",\n+            size: \"default\",\n+          },\n+        }\n+      )\n+      \n+      export interface ButtonProps\n+        extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n+          VariantProps<typeof buttonVariants> {\n+        asChild?: boolean\n+      }\n+      \n+      const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n+        ({ className, variant, size, asChild = false, ...props }, ref) => {\n+          const Comp = asChild ? Slot : \"button\"\n+          return (\n+            <Comp\n+              \n\\ No newline at end of file\n"
                },
                {
                    "date": 1733666213795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,99 @@\n+import * as React from \"react\"\n+import { Slot } from \"@radix-ui/react-slot\"\n+import { cva, type VariantProps } from \"class-variance-authority\"\n+import { cn } from \"@/lib/utils\"\n+\n+const buttonVariants = cva(\n+  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n+  {\n+    variants: {\n+      variant: {\n+        default:\n+          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n+        destructive:\n+          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n+        outline:\n+          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n+        secondary:\n+          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n+        ghost:\n+          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+        link:\n+          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n+      },\n+      size: {\n+        default: \"h-10 px-4 py-2\",\n+        sm: \"h-9 rounded-md px-3\",\n+        lg: \"h-11 rounded-md px-8\",\n+        icon: \"h-10 w-10\",\n+      },\n+    },\n+    defaultVariants: {\n+      variant: \"default\",\n+      size: \"default\",\n+    },\n+  }\n+)\n+\n+export interface ButtonProps\n+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n+    VariantProps<typeof buttonVariants> {\n+  asChild?: boolean\n+}\n+\n+const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n+  ({ className, variant, size, asChild = false, ...props }, ref) => {\n+    const Comp = asChild ? Slot : \"button\"\n+    return (\n+      <Comp\n+\n+\n+    \n+       \n+      import * as React from \"react\"\n+      import { Slot } from \"@radix-ui/react-slot\"\n+      import { cva, type VariantProps } from \"class-variance-authority\"\n+      \n+      import { cn } from \"@/lib/utils\"\n+      \n+      const buttonVariants = cva(\n+        \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-pink-400 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-pink-500 dark:focus-visible:ring-pink-300\",\n+        {\n+          variants: {\n+            variant: {\n+              default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n+              destructive:\n+                \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n+              outline:\n+                \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+              secondary:\n+                \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n+              ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+              link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n+            },\n+            size: {\n+              default: \"h-10 px-4 py-2\",\n+              sm: \"h-9 rounded-md px-3\",\n+              lg: \"h-11 rounded-md px-8\",\n+              icon: \"h-10 w-10\",\n+            },\n+          },\n+          defaultVariants: {\n+            variant: \"default\",\n+            size: \"default\",\n+          },\n+        }\n+      )\n+      \n+      export interface ButtonProps\n+        extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n+          VariantProps<typeof buttonVariants> {\n+        asChild?: boolean\n+      }\n+      \n+      const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n+        ({ className, variant, size, asChild = false, ...props }, ref) => {\n+          const Comp = asChild ? Slot : \"button\"\n+          return (\n+            <Comp\n+              \n\\ No newline at end of file\n"
                },
                {
                    "date": 1733666219160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,58 @@\n+import * as React from \"react\"\n+import { Slot } from \"@radix-ui/react-slot\"\n+import { cva, type VariantProps } from \"class-variance-authority\"\n+import { cn } from \"@/lib/utils\"\n+\n+const buttonVariants = cva(\n+  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n+  {\n+    variants: {\n+      variant: {\n+        default:\n+          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n+        destructive:\n+          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n+        outline:\n+          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n+        secondary:\n+          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n+        ghost:\n+          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+        link:\n+          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n+      },\n+      size: {\n+        default: \"h-10 px-4 py-2\",\n+        sm: \"h-9 rounded-md px-3\",\n+        lg: \"h-11 rounded-md px-8\",\n+        icon: \"h-10 w-10\",\n+      },\n+    },\n+    defaultVariants: {\n+      variant: \"default\",\n+      size: \"default\",\n+    },\n+  }\n+)\n+\n+export interface ButtonProps\n+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n+    VariantProps<typeof buttonVariants> {\n+  asChild?: boolean\n+}\n+\n+const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n+  ({ className, variant, size, asChild = false, ...props }, ref) => {\n+    const Comp = asChild ? Slot : \"button\"\n+    return (\n+      <Comp\n+      className={cn(buttonVariants({ variant, size, className }))}\n+      ref={ref}\n+      {...props}\n+    />\n+  )\n+\n+)\n+Button.displayName = \"Button\"\n+\n+export { Button, buttonVariants }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733666226868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,57 @@\n+import * as React from \"react\"\n+import { Slot } from \"@radix-ui/react-slot\"\n+import { cva, type VariantProps } from \"class-variance-authority\"\n+import { cn } from \"@/lib/utils\"\n+\n+const buttonVariants = cva(\n+  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n+  {\n+    variants: {\n+      variant: {\n+        default:\n+          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n+        destructive:\n+          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n+        outline:\n+          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n+        secondary:\n+          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n+        ghost:\n+          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+        link:\n+          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n+      },\n+      size: {\n+        default: \"h-10 px-4 py-2\",\n+        sm: \"h-9 rounded-md px-3\",\n+        lg: \"h-11 rounded-md px-8\",\n+        icon: \"h-10 w-10\",\n+      },\n+    },\n+    defaultVariants: {\n+      variant: \"default\",\n+      size: \"default\",\n+    },\n+  }\n+)\n+\n+export interface ButtonProps\n+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n+    VariantProps<typeof buttonVariants> {\n+  asChild?: boolean\n+}\n+\n+const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n+  ({ className, variant, size, asChild = false, ...props }, ref) => {\n+    const Comp = asChild ? Slot : \"button\"\n+    return (\n+      <Comp\n+      className={cn(buttonVariants({ variant, size, className }))}\n+      ref={ref}\n+      {...props}\n+    />\n+  )\n+\n+Button.displayName = \"Button\"\n+\n+export { Button, buttonVariants }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733666234903,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,58 @@\n+import * as React from \"react\"\n+import { Slot } from \"@radix-ui/react-slot\"\n+import { cva, type VariantProps } from \"class-variance-authority\"\n+import { cn } from \"@/lib/utils\"\n+\n+const buttonVariants = cva(\n+  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n+  {\n+    variants: {\n+      variant: {\n+        default:\n+          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n+        destructive:\n+          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n+        outline:\n+          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n+        secondary:\n+          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n+        ghost:\n+          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+        link:\n+          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n+      },\n+      size: {\n+        default: \"h-10 px-4 py-2\",\n+        sm: \"h-9 rounded-md px-3\",\n+        lg: \"h-11 rounded-md px-8\",\n+        icon: \"h-10 w-10\",\n+      },\n+    },\n+    defaultVariants: {\n+      variant: \"default\",\n+      size: \"default\",\n+    },\n+  }\n+)\n+\n+export interface ButtonProps\n+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n+    VariantProps<typeof buttonVariants> {\n+  asChild?: boolean\n+}\n+\n+const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n+  ({ className, variant, size, asChild = false, ...props }, ref) => {\n+    const Comp = asChild ? Slot : \"button\"\n+    return (\n+      <Comp\n+      className={cn(buttonVariants({ variant, size, className }))}\n+      ref={ref}\n+      {...props}\n+    />\n+  )\n+)\n+}\n+Button.displayName = \"Button\"\n+\n+export { Button, buttonVariants }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733666244429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,56 @@\n+import * as React from \"react\"\n+import { Slot } from \"@radix-ui/react-slot\"\n+import { cva, type VariantProps } from \"class-variance-authority\"\n+import { cn } from \"@/lib/utils\"\n+\n+const buttonVariants = cva(\n+  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n+  {\n+    variants: {\n+      variant: {\n+        default:\n+          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n+        destructive:\n+          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n+        outline:\n+          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n+        secondary:\n+          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n+        ghost:\n+          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+        link:\n+          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n+      },\n+      size: {\n+        default: \"h-10 px-4 py-2\",\n+        sm: \"h-9 rounded-md px-3\",\n+        lg: \"h-11 rounded-md px-8\",\n+        icon: \"h-10 w-10\",\n+      },\n+    },\n+    defaultVariants: {\n+      variant: \"default\",\n+      size: \"default\",\n+    },\n+  }\n+)\n+\n+export interface ButtonProps\n+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n+    VariantProps<typeof buttonVariants> {\n+  asChild?: boolean\n+}\n+\n+const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n+  ({ className, variant, size, asChild = false, ...props }, ref) => {\n+    const Comp = asChild ? Slot : \"button\"\n+    return (\n+      <Comp\n+      className={cn(buttonVariants({ variant, size, className }))}\n+      ref={ref}\n+      {...props}\n+    />\n+  )}\n+Button.displayName = \"Button\"\n+\n+export { Button, buttonVariants }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733666252593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,696 +49,9 @@\n       className={cn(buttonVariants({ variant, size, className }))}\n       ref={ref}\n       {...props}\n     />\n-  )}\n-Button.displayName = \"Button\"\n-\n-export { Button, buttonVariants }\n-import * as React from \"react\"\n-import { Slot } from \"@radix-ui/react-slot\"\n-import { cva, type VariantProps } from \"class-variance-authority\"\n-import { cn } from \"@/lib/utils\"\n-\n-const buttonVariants = cva(\n-  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n-  {\n-    variants: {\n-      variant: {\n-        default:\n-          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n-        destructive:\n-          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n-        outline:\n-          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n-        secondary:\n-          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n-        ghost:\n-          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-        link:\n-          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n-      },\n-      size: {\n-        default: \"h-10 px-4 py-2\",\n-        sm: \"h-9 rounded-md px-3\",\n-        lg: \"h-11 rounded-md px-8\",\n-        icon: \"h-10 w-10\",\n-      },\n-    },\n-    defaultVariants: {\n-      variant: \"default\",\n-      size: \"default\",\n-    },\n-  }\n-)\n-\n-export interface ButtonProps\n-  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n-    VariantProps<typeof buttonVariants> {\n-  asChild?: boolean\n-}\n-\n-const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n-  ({ className, variant, size, asChild = false, ...props }, ref) => {\n-    const Comp = asChild ? Slot : \"button\"\n-    return (\n-      <Comp\n-      className={cn(buttonVariants({ variant, size, className }))}\n-      ref={ref}\n-      {...props}\n-    />\n   )\n-)\n-}\n Button.displayName = \"Button\"\n \n-export { Button, buttonVariants }\n-import * as React from \"react\"\n-import { Slot } from \"@radix-ui/react-slot\"\n-import { cva, type VariantProps } from \"class-variance-authority\"\n-import { cn } from \"@/lib/utils\"\n \n-const buttonVariants = cva(\n-  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n-  {\n-    variants: {\n-      variant: {\n-        default:\n-          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n-        destructive:\n-          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n-        outline:\n-          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n-        secondary:\n-          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n-        ghost:\n-          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-        link:\n-          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n-      },\n-      size: {\n-        default: \"h-10 px-4 py-2\",\n-        sm: \"h-9 rounded-md px-3\",\n-        lg: \"h-11 rounded-md px-8\",\n-        icon: \"h-10 w-10\",\n-      },\n-    },\n-    defaultVariants: {\n-      variant: \"default\",\n-      size: \"default\",\n-    },\n-  }\n-)\n-\n-export interface ButtonProps\n-  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n-    VariantProps<typeof buttonVariants> {\n-  asChild?: boolean\n-}\n-\n-const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n-  ({ className, variant, size, asChild = false, ...props }, ref) => {\n-    const Comp = asChild ? Slot : \"button\"\n-    return (\n-      <Comp\n-      className={cn(buttonVariants({ variant, size, className }))}\n-      ref={ref}\n-      {...props}\n-    />\n-  )\n-\n-Button.displayName = \"Button\"\n-\n-export { Button, buttonVariants }\n-import * as React from \"react\"\n-import { Slot } from \"@radix-ui/react-slot\"\n-import { cva, type VariantProps } from \"class-variance-authority\"\n-import { cn } from \"@/lib/utils\"\n-\n-const buttonVariants = cva(\n-  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n-  {\n-    variants: {\n-      variant: {\n-        default:\n-          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n-        destructive:\n-          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n-        outline:\n-          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n-        secondary:\n-          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n-        ghost:\n-          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-        link:\n-          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n-      },\n-      size: {\n-        default: \"h-10 px-4 py-2\",\n-        sm: \"h-9 rounded-md px-3\",\n-        lg: \"h-11 rounded-md px-8\",\n-        icon: \"h-10 w-10\",\n-      },\n-    },\n-    defaultVariants: {\n-      variant: \"default\",\n-      size: \"default\",\n-    },\n-  }\n-)\n-\n-export interface ButtonProps\n-  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n-    VariantProps<typeof buttonVariants> {\n-  asChild?: boolean\n-}\n-\n-const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n-  ({ className, variant, size, asChild = false, ...props }, ref) => {\n-    const Comp = asChild ? Slot : \"button\"\n-    return (\n-      <Comp\n-      className={cn(buttonVariants({ variant, size, className }))}\n-      ref={ref}\n-      {...props}\n-    />\n-  )\n-\n-)\n-Button.displayName = \"Button\"\n-\n-export { Button, buttonVariants }\n-import * as React from \"react\"\n-import { Slot } from \"@radix-ui/react-slot\"\n-import { cva, type VariantProps } from \"class-variance-authority\"\n-import { cn } from \"@/lib/utils\"\n-\n-const buttonVariants = cva(\n-  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n-  {\n-    variants: {\n-      variant: {\n-        default:\n-          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n-        destructive:\n-          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n-        outline:\n-          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n-        secondary:\n-          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n-        ghost:\n-          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-        link:\n-          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n-      },\n-      size: {\n-        default: \"h-10 px-4 py-2\",\n-        sm: \"h-9 rounded-md px-3\",\n-        lg: \"h-11 rounded-md px-8\",\n-        icon: \"h-10 w-10\",\n-      },\n-    },\n-    defaultVariants: {\n-      variant: \"default\",\n-      size: \"default\",\n-    },\n-  }\n-)\n-\n-export interface ButtonProps\n-  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n-    VariantProps<typeof buttonVariants> {\n-  asChild?: boolean\n-}\n-\n-const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n-  ({ className, variant, size, asChild = false, ...props }, ref) => {\n-    const Comp = asChild ? Slot : \"button\"\n-    return (\n-      <Comp\n-\n-\n-    \n-       \n-      import * as React from \"react\"\n-      import { Slot } from \"@radix-ui/react-slot\"\n-      import { cva, type VariantProps } from \"class-variance-authority\"\n-      \n-      import { cn } from \"@/lib/utils\"\n-      \n-      const buttonVariants = cva(\n-        \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-pink-400 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-pink-500 dark:focus-visible:ring-pink-300\",\n-        {\n-          variants: {\n-            variant: {\n-              default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n-              destructive:\n-                \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n-              outline:\n-                \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-              secondary:\n-                \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n-              ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-              link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n-            },\n-            size: {\n-              default: \"h-10 px-4 py-2\",\n-              sm: \"h-9 rounded-md px-3\",\n-              lg: \"h-11 rounded-md px-8\",\n-              icon: \"h-10 w-10\",\n-            },\n-          },\n-          defaultVariants: {\n-            variant: \"default\",\n-            size: \"default\",\n-          },\n-        }\n-      )\n-      \n-      export interface ButtonProps\n-        extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n-          VariantProps<typeof buttonVariants> {\n-        asChild?: boolean\n-      }\n-      \n-      const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n-        ({ className, variant, size, asChild = false, ...props }, ref) => {\n-          const Comp = asChild ? Slot : \"button\"\n-          return (\n-            <Comp\n-              \n-import * as React from \"react\"\n-import { Slot } from \"@radix-ui/react-slot\"\n-import { cva, type VariantProps } from \"class-variance-authority\"\n-import { cn } from \"@/lib/utils\"\n-\n-const buttonVariants = cva(\n-  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n-  {\n-    variants: {\n-      variant: {\n-        default:\n-          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n-        destructive:\n-          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n-        outline:\n-          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n-        secondary:\n-          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n-        ghost:\n-          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-        link:\n-          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n-      },\n-      size: {\n-        default: \"h-10 px-4 py-2\",\n-        sm: \"h-9 rounded-md px-3\",\n-        lg: \"h-11 rounded-md px-8\",\n-        icon: \"h-10 w-10\",\n-      },\n-    },\n-    defaultVariants: {\n-      variant: \"default\",\n-      size: \"default\",\n-    },\n-  }\n-)\n-\n-export interface ButtonProps\n-  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n-    VariantProps<typeof buttonVariants> {\n-  asChild?: boolean\n-}\n-\n-const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n-  ({ className, variant, size, asChild = false, ...props }, ref) => {\n-    const Comp = asChild ? Slot : \"button\"\n-    return (\n-      <Comp\n-       \n-      import * as React from \"react\"\n-      import { Slot } from \"@radix-ui/react-slot\"\n-      import { cva, type VariantProps } from \"class-variance-authority\"\n-      \n-      import { cn } from \"@/lib/utils\"\n-      \n-      const buttonVariants = cva(\n-        \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-pink-400 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-pink-500 dark:focus-visible:ring-pink-300\",\n-        {\n-          variants: {\n-            variant: {\n-              default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n-              destructive:\n-                \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n-              outline:\n-                \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-              secondary:\n-                \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n-              ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-              link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n-            },\n-            size: {\n-              default: \"h-10 px-4 py-2\",\n-              sm: \"h-9 rounded-md px-3\",\n-              lg: \"h-11 rounded-md px-8\",\n-              icon: \"h-10 w-10\",\n-            },\n-          },\n-          defaultVariants: {\n-            variant: \"default\",\n-            size: \"default\",\n-          },\n-        }\n-      )\n-      \n-      export interface ButtonProps\n-        extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n-          VariantProps<typeof buttonVariants> {\n-        asChild?: boolean\n-      }\n-      \n-      const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n-        ({ className, variant, size, asChild = false, ...props }, ref) => {\n-          const Comp = asChild ? Slot : \"button\"\n-          return (\n-            <Comp\n-              \n-import * as React from \"react\"\n-import { Slot } from \"@radix-ui/react-slot\"\n-import { cva, type VariantProps } from \"class-variance-authority\"\n-import { cn } from \"@/lib/utils\"\n-\n-const buttonVariants = cva(\n-  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n-  {\n-    variants: {\n-      variant: {\n-        default:\n-          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n-        destructive:\n-          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n-        outline:\n-          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n-        secondary:\n-          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n-        ghost:\n-          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-        link:\n-          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n-      },\n-      size: {\n-        default: \"h-10 px-4 py-2\",\n-        sm: \"h-9 rounded-md px-3\",\n-        lg: \"h-11 rounded-md px-8\",\n-        icon: \"h-10 w-10\",\n-      },\n-    },\n-    defaultVariants: {\n-      variant: \"default\",\n-      size: \"default\",\n-    },\n-  }\n-)\n-\n-export interface ButtonProps\n-  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n-    VariantProps<typeof buttonVariants> {\n-  asChild?: boolean\n-}\n-\n-const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n-  ({ className, variant, size, asChild = false, ...props }, ref) => {\n-    const Comp = asChild ? Slot : \"button\"\n-    return (\n-      <Comp\n-       \n-      import * as React from \"react\"\n-      import { Slot } from \"@radix-ui/react-slot\"\n-      import { cva, type VariantProps } from \"class-variance-authority\"\n-      \n-      import { cn } from \"@/lib/utils\"\n-      \n-      const buttonVariants = cva(\n-        \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-pink-400 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-pink-500 dark:focus-visible:ring-pink-300\",\n-        {\n-          variants: {\n-            variant: {\n-              default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n-              destructive:\n-                \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n-              outline:\n-                \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-              secondary:\n-                \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n-              ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-              link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n-            },\n-            size: {\n-              default: \"h-10 px-4 py-2\",\n-              sm: \"h-9 rounded-md px-3\",\n-              lg: \"h-11 rounded-md px-8\",\n-              icon: \"h-10 w-10\",\n-            },\n-          },\n-          defaultVariants: {\n-            variant: \"default\",\n-            size: \"default\",\n-          },\n-        }\n-      )\n-      \n-      export interface ButtonProps\n-        extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n-          VariantProps<typeof buttonVariants> {\n-        asChild?: boolean\n-      }\n-      \n-      const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n-        ({ className, variant, size, asChild = false, ...props }, ref) => {\n-          const Comp = asChild ? Slot : \"button\"\n-          return (\n-            <Comp\n-              className={cn(buttonVariants({ variant, size, className }))}\n-              ref={ref}\n-              {...props}\n-            />\n-          )\n-        }\n-      )\n-Button.displayName = \"Button\"\n-      \n-export { Button, buttonVariants }\n-import * as React from \"react\"\n-import { Slot } from \"@radix-ui/react-slot\"\n-import { cva, type VariantProps } from \"class-variance-authority\"\n-import { cn } from \"@/lib/utils\"\n-\n-const buttonVariants = cva(\n-  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n-  {\n-    variants: {\n-      variant: {\n-        default:\n-          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n-        destructive:\n-          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n-        outline:\n-          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n-        secondary:\n-          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n-        ghost:\n-          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-        link:\n-          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n-      },\n-      size: {\n-        default: \"h-10 px-4 py-2\",\n-        sm: \"h-9 rounded-md px-3\",\n-        lg: \"h-11 rounded-md px-8\",\n-        icon: \"h-10 w-10\",\n-      },\n-    },\n-    defaultVariants: {\n-      variant: \"default\",\n-      size: \"default\",\n-    },\n-  }\n-)\n-\n-export interface ButtonProps\n-  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n-    VariantProps<typeof buttonVariants> {\n-  asChild?: boolean\n-}\n-\n-const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n-  ({ className, variant, size, asChild = false, ...props }, ref) => {\n-    const Comp = asChild ? Slot : \"button\"\n-    return (\n-      <Comp\n-       \n-      import * as React from \"react\"\n-      import { Slot } from \"@radix-ui/react-slot\"\n-      import { cva, type VariantProps } from \"class-variance-authority\"\n-      \n-      import { cn } from \"@/lib/utils\"\n-      \n-      const buttonVariants = cva(\n-        \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-pink-400 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-pink-500 dark:focus-visible:ring-pink-300\",\n-        {\n-          variants: {\n-            variant: {\n-              default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n-              destructive:\n-                \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n-              outline:\n-                \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-              secondary:\n-                \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n-              ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-              link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n-            },\n-            size: {\n-              default: \"h-10 px-4 py-2\",\n-              sm: \"h-9 rounded-md px-3\",\n-              lg: \"h-11 rounded-md px-8\",\n-              icon: \"h-10 w-10\",\n-            },\n-          },\n-          defaultVariants: {\n-            variant: \"default\",\n-            size: \"default\",\n-          },\n-        }\n-      )\n-      \n-      export interface ButtonProps\n-        extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n-          VariantProps<typeof buttonVariants> {\n-        asChild?: boolean\n-      }\n-      \n-      const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n-        ({ className, variant, size, asChild = false, ...props }, ref) => {\n-          const Comp = asChild ? Slot : \"button\"\n-          return (\n-            <Comp\n-              className={cn(buttonVariants({ variant, size, className }))}\n-              ref={ref}\n-              {...props}\n-            />\n-          )\n-        }\n-      )\n-      Button.displayName = \"Button\"\n-      \n-      export { Button, buttonVariants }\n-\n-\n-\n-\n-\n-import * as React from \"react\"\n-import { Slot } from \"@radix-ui/react-slot\"\n-import { cva, type VariantProps } from \"class-variance-authority\"\n-import { cn } from \"@/lib/utils\"\n-\n-const buttonVariants = cva(\n-  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n-  {\n-    variants: {\n-      variant: {\n-        default:\n-          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n-        destructive:\n-          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n-        outline:\n-          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n-        secondary:\n-          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n-        ghost:\n-          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-        link:\n-          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n-      },\n-      size: {\n-        default: \"h-10 px-4 py-2\",\n-        sm: \"h-9 rounded-md px-3\",\n-        lg: \"h-11 rounded-md px-8\",\n-        icon: \"h-10 w-10\",\n-      },\n-    },\n-    defaultVariants: {\n-      variant: \"default\",\n-      size: \"default\",\n-    },\n-  }\n-)\n-\n-export interface ButtonProps\n-  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n-    VariantProps<typeof buttonVariants> {\n-  asChild?: boolean\n-}\n-\n-const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n-  ({ className, variant, size, asChild = false, ...props }, ref) => {\n-    const Comp = asChild ? Slot : \"button\"\n-    return (\n-      <Comp\n-       \n-import * as React from \"react\"\n-import { Slot } from \"@radix-ui/react-slot\"\n-import { cva, type VariantProps } from \"class-variance-authority\"\n-\n-import { cn } from \"@/lib/utils\"\n-\n-const buttonVariants = cva(\n-  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-pink-400 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-pink-500 dark:focus-visible:ring-pink-300\",\n-  {\n-    variants: {\n-      variant: {\n-        default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n-        destructive:\n-          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n-        outline:\n-          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-        secondary:\n-          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n-        ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-        link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n-      },\n-      size: {\n-        default: \"h-10 px-4 py-2\",\n-        sm: \"h-9 rounded-md px-3\",\n-        lg: \"h-11 rounded-md px-8\",\n-        icon: \"h-10 w-10\",\n-      },\n-    },\n-    defaultVariants: {\n-      variant: \"default\",\n-      size: \"default\",\n-    },\n-  }\n-)\n-\n-export interface ButtonProps\n-  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n-    VariantProps<typeof buttonVariants> {\n-  asChild?: boolean\n-}\n-\n-const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n-  ({ className, variant, size, asChild = false, ...props }, ref) => {\n-    const Comp = asChild ? Slot : \"button\"\n-    return (\n-      <Comp\n-        className={cn(buttonVariants({ variant, size, className }))}\n-        ref={ref}\n-        {...props}\n-      />\n-    )\n-  }\n-)\n-Button.displayName = \"Button\"\n-\n export { Button, buttonVariants }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733666260728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import * as React from \"react\"\n+import { Slot } from \"@radix-ui/react-slot\"\n+import { cva, type VariantProps } from \"class-variance-authority\"\n+import { cn } from \"@/lib/utils\"\n+\n+const buttonVariants = cva(\n+  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n+  {\n+    variants: {\n+      variant: {\n+        default:\n+          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n+        destructive:\n+          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n+        outline:\n+          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n+        secondary:\n+          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n+        ghost:\n+          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+        link:\n+          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n+      },\n+      size: {\n+        default: \"h-10 px-4 py-2\",\n+        sm: \"h-9 rounded-md px-3\",\n+        lg: \"h-11 rounded-md px-8\",\n+        icon: \"h-10 w-10\",\n+      },\n+    },\n+    defaultVariants: {\n+      variant: \"default\",\n+      size: \"default\",\n+    },\n+  }\n+)\n+\n+export interface ButtonProps\n+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n+    VariantProps<typeof buttonVariants> {\n+  asChild?: boolean\n+}\n+\n+const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n+  ({ className, variant, size, asChild = false, ...props }, ref) => {\n+    const Comp = asChild ? Slot : \"button\"\n+    return (\n+      <Comp\n+      className={cn(buttonVariants({ variant, size, className }))}\n+      ref={ref}\n+      {...props}\n+    />\n+  )\n+)\n+]\n+Button.displayName = \"Button\"\n+\n+\n+export { Button, buttonVariants }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733666267951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,58 @@\n+import * as React from \"react\"\n+import { Slot } from \"@radix-ui/react-slot\"\n+import { cva, type VariantProps } from \"class-variance-authority\"\n+import { cn } from \"@/lib/utils\"\n+\n+const buttonVariants = cva(\n+  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n+  {\n+    variants: {\n+      variant: {\n+        default:\n+          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n+        destructive:\n+          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n+        outline:\n+          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n+        secondary:\n+          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n+        ghost:\n+          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+        link:\n+          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n+      },\n+      size: {\n+        default: \"h-10 px-4 py-2\",\n+        sm: \"h-9 rounded-md px-3\",\n+        lg: \"h-11 rounded-md px-8\",\n+        icon: \"h-10 w-10\",\n+      },\n+    },\n+    defaultVariants: {\n+      variant: \"default\",\n+      size: \"default\",\n+    },\n+  }\n+)\n+\n+export interface ButtonProps\n+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n+    VariantProps<typeof buttonVariants> {\n+  asChild?: boolean\n+}\n+\n+const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n+  ({ className, variant, size, asChild = false, ...props }, ref) => {\n+    const Comp = asChild ? Slot : \"button\"\n+    return (\n+      <Comp\n+      className={cn(buttonVariants({ variant, size, className }))}\n+      ref={ref}\n+      {...props}\n+    />\n+    )\n+}\n+Button.displayName = \"Button\"\n+\n+\n+export { Button, buttonVariants }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733666288589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+import * as React from \"react\"\n+import { Slot } from \"@radix-ui/react-slot\"\n+import { cva, type VariantProps } from \"class-variance-authority\"\n+import { cn } from \"@/lib/utils\"\n+\n+const buttonVariants = cva(\n+  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n+  {\n+    variants: {\n+      variant: {\n+        default:\n+          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n+        destructive:\n+          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n+        outline:\n+          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n+        secondary:\n+          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n+        ghost:\n+          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+        link:\n+          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n+      },\n+      size: {\n+        default: \"h-10 px-4 py-2\",\n+        sm: \"h-9 rounded-md px-3\",\n+        lg: \"h-11 rounded-md px-8\",\n+        icon: \"h-10 w-10\",\n+      },\n+    },\n+    defaultVariants: {\n+      variant: \"default\",\n+      size: \"default\",\n+    },\n+  }\n+)\n+\n+export interface ButtonProps\n+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n+    VariantProps<typeof buttonVariants> {\n+  asChild?: boolean\n+}\n+\n+const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n+  ({ className, variant, size, asChild = false, ...props }, ref) => {\n+    const Comp = asChild ? Slot : \"button\"\n+    return (\n+      <Comp\n+      className={cn(buttonVariants({ variant, size, className }))}\n+      ref={ref}\n+      {...props}\n+    />\n+    )\n+}\n+Button.displayName = \"Button\"\n+\n+\n+export { Button, buttonVariants }\n+\n+\n"
                },
                {
                    "date": 1733666295412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,82 +1,24 @@\n+\n import * as React from \"react\"\n import { Slot } from \"@radix-ui/react-slot\"\n import { cva, type VariantProps } from \"class-variance-authority\"\n-import { cn } from \"@/lib/utils\"\n \n-const buttonVariants = cva(\n-  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n-  {\n-    variants: {\n-      variant: {\n-        default:\n-          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n-        destructive:\n-          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n-        outline:\n-          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n-        secondary:\n-          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n-        ghost:\n-          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-        link:\n-          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n-      },\n-      size: {\n-        default: \"h-10 px-4 py-2\",\n-        sm: \"h-9 rounded-md px-3\",\n-        lg: \"h-11 rounded-md px-8\",\n-        icon: \"h-10 w-10\",\n-      },\n-    },\n-    defaultVariants: {\n-      variant: \"default\",\n-      size: \"default\",\n-    },\n-  }\n-)\n-\n-export interface ButtonProps\n-  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n-    VariantProps<typeof buttonVariants> {\n-  asChild?: boolean\n-}\n-\n-const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n-  ({ className, variant, size, asChild = false, ...props }, ref) => {\n-    const Comp = asChild ? Slot : \"button\"\n-    return (\n-      <Comp\n-      className={cn(buttonVariants({ variant, size, className }))}\n-      ref={ref}\n-      {...props}\n-    />\n-    )\n-}\n-Button.displayName = \"Button\"\n-\n-\n-export { Button, buttonVariants }\n-\n-\n-import * as React from \"react\"\n-import { Slot } from \"@radix-ui/react-slot\"\n-import { cva, type VariantProps } from \"class-variance-authority\"\n import { cn } from \"@/lib/utils\"\n \n const buttonVariants = cva(\n-  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n+  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-pink-400 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-pink-500 dark:focus-visible:ring-pink-300\",\n   {\n     variants: {\n       variant: {\n         default:\n           \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n         destructive:\n-          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n+          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n         outline:\n-          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n+          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n         secondary:\n-          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n+          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n         ghost:\n           \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n         link:\n           \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n@@ -105,130 +47,14 @@\n   ({ className, variant, size, asChild = false, ...props }, ref) => {\n     const Comp = asChild ? Slot : \"button\"\n     return (\n       <Comp\n-      className={cn(buttonVariants({ variant, size, className }))}\n-      ref={ref}\n-      {...props}\n-    />\n+        className={cn(buttonVariants({ variant, size, className }))}\n+        ref={ref}\n+        {...props}\n+      />\n     )\n-}\n-Button.displayName = \"Button\"\n-\n-\n-export { Button, buttonVariants }\n-import * as React from \"react\"\n-import { Slot } from \"@radix-ui/react-slot\"\n-import { cva, type VariantProps } from \"class-variance-authority\"\n-import { cn } from \"@/lib/utils\"\n-\n-const buttonVariants = cva(\n-  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n-  {\n-    variants: {\n-      variant: {\n-        default:\n-          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n-        destructive:\n-          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n-        outline:\n-          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n-        secondary:\n-          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n-        ghost:\n-          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-        link:\n-          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n-      },\n-      size: {\n-        default: \"h-10 px-4 py-2\",\n-        sm: \"h-9 rounded-md px-3\",\n-        lg: \"h-11 rounded-md px-8\",\n-        icon: \"h-10 w-10\",\n-      },\n-    },\n-    defaultVariants: {\n-      variant: \"default\",\n-      size: \"default\",\n-    },\n   }\n )\n-\n-export interface ButtonProps\n-  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n-    VariantProps<typeof buttonVariants> {\n-  asChild?: boolean\n-}\n-\n-const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n-  ({ className, variant, size, asChild = false, ...props }, ref) => {\n-    const Comp = asChild ? Slot : \"button\"\n-    return (\n-      <Comp\n-      className={cn(buttonVariants({ variant, size, className }))}\n-      ref={ref}\n-      {...props}\n-    />\n-  )\n-)\n-]\n Button.displayName = \"Button\"\n \n-\n export { Button, buttonVariants }\n-import * as React from \"react\"\n-import { Slot } from \"@radix-ui/react-slot\"\n-import { cva, type VariantProps } from \"class-variance-authority\"\n-import { cn } from \"@/lib/utils\"\n-\n-const buttonVariants = cva(\n-  \"inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors focus-visible:outline-none\",\n-  {\n-    variants: {\n-      variant: {\n-        default:\n-          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n-        destructive:\n-          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50\",\n-        outline:\n-          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900\",\n-        secondary:\n-          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50\",\n-        ghost:\n-          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n-        link:\n-          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n-      },\n-      size: {\n-        default: \"h-10 px-4 py-2\",\n-        sm: \"h-9 rounded-md px-3\",\n-        lg: \"h-11 rounded-md px-8\",\n-        icon: \"h-10 w-10\",\n-      },\n-    },\n-    defaultVariants: {\n-      variant: \"default\",\n-      size: \"default\",\n-    },\n-  }\n-)\n-\n-export interface ButtonProps\n-  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n-    VariantProps<typeof buttonVariants> {\n-  asChild?: boolean\n-}\n-\n-const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n-  ({ className, variant, size, asChild = false, ...props }, ref) => {\n-    const Comp = asChild ? Slot : \"button\"\n-    return (\n-      <Comp\n-      className={cn(buttonVariants({ variant, size, className }))}\n-      ref={ref}\n-      {...props}\n-    />\n-  )\n\\ No newline at end of file\n-Button.displayName = \"Button\"\n-\n-\n-export { Button, buttonVariants }\n"
                },
                {
                    "date": 1733669533282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import * as React from \"react\"\n+import { Slot } from \"@radix-ui/react-slot\"\n+import { cva, type VariantProps } from \"class-variance-authority\"\n+\n+import { cn } from \"@/lib/utils\"\n+\n+const buttonVariants = cva(\n+  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-pink-400 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-pink-500 dark:focus-visible:ring-pink-300\",\n+  {\n+    variants: {\n+      variant: {\n+        default:\n+          \"bg-[#FB2E86] text-gray-50 hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n+        destructive:\n+          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n+        outline:\n+          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+        secondary:\n+          \"bg-gray-100  hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n+        ghost:\n+          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+        link:\n+          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n+      },\n+      size: {\n+        default: \"h-10 px-4 py-2\",\n+        sm: \"h-9 rounded-md px-3\",\n+        lg: \"h-11 rounded-md px-8\",\n+        icon: \"h-10 w-10\",\n+      },\n+    },\n+    defaultVariants: {\n+      variant: \"default\",\n+      size: \"default\",\n+    },\n+  }\n+)\n+\n+export interface ButtonProps\n+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n+    VariantProps<typeof buttonVariants> {\n+  asChild?: boolean\n+}\n+\n+const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n+  ({ className, variant, size, asChild = false, ...props }, ref) => {\n+    const Comp = asChild ? Slot : \"button\"\n+    return (\n+      <Comp\n+        className={cn(buttonVariants({ variant, size, className }))}\n+        ref={ref}\n+        {...props}\n+      />\n+    )\n+  }\n+)\n+Button.displayName = \"Button\"\n+\n+export { Button, buttonVariants }\n"
                },
                {
                    "date": 1733669545093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import * as React from \"react\"\n+import { Slot } from \"@radix-ui/react-slot\"\n+import { cva, type VariantProps } from \"class-variance-authority\"\n+\n+import { cn } from \"@/lib/utils\"\n+\n+const buttonVariants = cva(\n+  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-pink-400 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-pink-500 dark:focus-visible:ring-pink-300\",\n+  {\n+    variants: {\n+      variant: {\n+        default:\n+          \"bg-[#FB2E86]  hover:bg-[#FB2E80] dark:bg-[#E91E63] dark:text-gray-900\",\n+        destructive:\n+          \"bg-red-500  hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n+        outline:\n+          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+        secondary:\n+          \"bg-gray-100  hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n+        ghost:\n+          \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n+        link:\n+          \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n+      },\n+      size: {\n+        default: \"h-10 px-4 py-2\",\n+        sm: \"h-9 rounded-md px-3\",\n+        lg: \"h-11 rounded-md px-8\",\n+        icon: \"h-10 w-10\",\n+      },\n+    },\n+    defaultVariants: {\n+      variant: \"default\",\n+      size: \"default\",\n+    },\n+  }\n+)\n+\n+export interface ButtonProps\n+  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n+    VariantProps<typeof buttonVariants> {\n+  asChild?: boolean\n+}\n+\n+const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n+  ({ className, variant, size, asChild = false, ...props }, ref) => {\n+    const Comp = asChild ? Slot : \"button\"\n+    return (\n+      <Comp\n+        className={cn(buttonVariants({ variant, size, className }))}\n+        ref={ref}\n+        {...props}\n+      />\n+    )\n+  }\n+)\n+Button.displayName = \"Button\"\n+\n+export { Button, buttonVariants }\n"
                }
            ],
            "date": 1733666070362,
            "name": "Commit-0",
            "content": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring- focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n        destructive:\n          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n        outline:\n          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n        secondary:\n          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n        ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n        link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"
        }
    ]
}